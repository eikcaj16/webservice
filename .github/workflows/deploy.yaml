name: Deploy Build AMI

env:
  ARTIFACT_NAME: webservice.zip
  APPLICATION_NAME: csye6225-webapp
  DEPLOYMENT_GROUP_NAME: csye6225-webapp-deployment

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: zip files
        run: |
          zip -r ${{ env.ARTIFACT_NAME }} ./*
          mkdir codedeploy_artifact
          mv ${{ env.ARTIFACT_NAME }} ./codedeploy_artifact

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1

      - name: Build Artifact
        uses: hashicorp/packer-github-actions@master
        with:
          command: build
          arguments: "-color=false -on-error=abort -var=aws_access_key=${{ secrets.AWS_ACCESS_KEY }}
           -var=aws_secret_key=${{ secrets.AWS_SECRET_KEY }} -var-file=./ami_vars.json"
          target: ./ami.json
        env:
          PACKER_LOG: 1

      - name: Upload Artifact to S3
        run: |
          aws s3 sync ./codedeploy_artifact s3://${{ secrets.S3_BUCKET_NAME }}

      - name: CodeDeploy
        run: |
          output=$(aws deploy create-deployment --application-name ${{ env.APPLICATION_NAME }} --deployment-group-name ${{ env.DEPLOYMENT_GROUP_NAME }} --s3-location bucket=${{ secrets.S3_BUCKET_NAME }},key=webservice.zip,bundleType=zip --region us-east-1 --output json)
          echo $output
          dId=$(echo $output | jq -r '.deploymentId')
          aws deploy wait deployment-successful --deployment-id $dId




